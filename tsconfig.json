{
	"compilerOptions": {
		"target": "ESNext" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
		"module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
		"lib": [
			"ES6"
		] /* Specify library files to be included in the compilation. */,
		"allowJs": true /* Allow javascript files to be compiled. */,
		"checkJs": true /* Report errors in .js files. */,
		"jsx": "react-native" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
		"declaration": true /* Generates corresponding '.d.ts' file. */,
		"declarationMap": true /* Generates a sourcemap for each corresponding '.d.ts' file. */,
		"sourceMap": true /* Generates corresponding '.map' file. */,
		"removeComments": true /* Do not emit comments to output. */,
		"noEmit": true /* Do not emit outputs. */,
		"isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,

		/* Strict Type-Checking Options */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
		"strictNullChecks": true /* Enable strict null checks. */,
		"strictFunctionTypes": true /* Enable strict checking of function types. */,

		/* Additional Checks */
		"noUnusedLocals": true /* Report errors on unused locals. */,
		"noUnusedParameters": true /* Report errors on unused parameters. */,
		"noImplicitReturns": true /* Report error when not all code paths in function return a value. */,

		/* Module Resolution Options */
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,

		/* Advanced Options */
		"skipLibCheck": true /* Skip type checking of declaration files. */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
		"resolveJsonModule": true,
		"plugins": [
			{
				"name": "typescript-styled-plugin",
				"lint": {
					"validProperties": [
						"aspect-ratio",
						"border-top-end-radius",
						"border-top-start-radius",
						"elevation",
						"margin-horizontal",
						"margin-vertical",
						"padding-horizontal",
						"padding-vertical",
						"shadow-color",
						"shadow-offset",
						"shadow-opacity",
						"shadow-radius",
						"text-align-vertical",
						"text-shadow-color",
						"text-shadow-radius",
						"tint-color"
					]
				}
			}
		]
	},
	"exclude": [
		"__test__",
		"android",
		"ios",
		"node_modules",
		"babel.config.js",
		"metro.config.js",
		"jest.config.js"
	]
}
